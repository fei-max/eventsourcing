---
import type { VideoDocument, VideoFrontmatter } from '~types';
import { getEditionInfo, stripHtmlHeadings } from '~utils';
import Card from '~components/Card.astro';
import BaseLayout from '~layouts/Layout.astro';
import CtaLink from '~components/CtaLink.astro';
import Video from '~components/Video';

if (typeof Astro.params.edition !== 'string') return Astro.redirect('/');

const editions = await Astro.glob<VideoFrontmatter>('../editions/*.md');

let matchingEdition: VideoDocument | undefined = undefined;
for (const edition of editions) {
  const info = getEditionInfo(edition.file);
  if (info) {
    if (Astro.params.edition === `${info.num}`) {
      // ex. redirect wtw.dev/48 -> wtw.dev/48-is-solid-what-react-shouldve-been
      return Astro.redirect(`/${info.base}`);
    } else if (Astro.params.edition === info.base) {
      matchingEdition = edition;
      break;
    }
  }
}

if (!matchingEdition) return Astro.redirect('/');

Astro.response.headers.set(
	'cache-control',
	'public, max-age=31536000'
);
const { file, getHeadings, compiledContent, frontmatter } = matchingEdition;
const title = getHeadings().find(h => h.depth === 1)?.text ?? 'Whiteboard the Web';
const canonicalBase = getEditionInfo(file)?.base;
---

<BaseLayout title={title} canonicalBase={canonicalBase} ogType="video.other" preconnectToYoutube={Boolean(frontmatter.youtube)}>
  <div>
    <h1>{title}</h1>
    <Card 
      htmlBody={stripHtmlHeadings(compiledContent())}
      twitter={frontmatter.twitter}
      youtube={frontmatter.youtube}
    >
      <Video slot="video" client:load type="youtube" title={title} src={frontmatter.youtube} colorIntersectionObserver={false} editionInfo={getEditionInfo(file)} />
    </Card>
    <CtaLink href="/">Hey, I learned something. Gimme more!</CtaLink>
  </div>
</BaseLayout>

<style>
  div {
    --cardColor: var(--color);
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }
</style>

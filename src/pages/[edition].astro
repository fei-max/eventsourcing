---
import { BIG_CACHE, getEditionInfo, stripHtmlHeadings } from "~utils";
import Card from "~components/Card.astro";
import BaseLayout from "~layouts/Layout.astro";
import CtaLink from "~components/CtaLink.astro";
import Video from "~components/Video";
import { CollectionEntry, getCollection } from "astro:content";

if (typeof Astro.params.edition !== "string") return Astro.redirect("/");

const editions = await getCollection("editions");

let matchingEdition: CollectionEntry<"editions"> | undefined = undefined;
for (const edition of editions) {
  const info = getEditionInfo(edition.id);
  if (info) {
    if (Astro.params.edition === `${info.num}`) {
      // ex. redirect wtw.dev/48 -> wtw.dev/48-is-solid-what-react-shouldve-been
      return Astro.redirect(`/${info.base}`);
    } else if (Astro.params.edition === info.base) {
      matchingEdition = edition;
      break;
    }
  }
}

if (!matchingEdition) return Astro.redirect("/");

Astro.response.headers.set("cache-control", BIG_CACHE);
const { id, data } = matchingEdition;
const { Content, headings } = await matchingEdition.render();
const title = headings.find((h) => h.depth === 1)?.text ?? "Whiteboard the Web";
const canonicalBase = getEditionInfo(id)?.base;
---

<BaseLayout
  title={title}
  canonicalBase={canonicalBase}
  ogType="video.other"
  preconnectToYoutube={true}
>
  <div>
    <h1>{title}</h1>
    <Card twitter={data.twitter} youtube={data.youtube}>
      <Content slot="body" />
      <Video
        slot="video"
        client:load
        type="youtube"
        title={title}
        src={data.youtube}
        hasColorIntersectionObserver={false}
        editionInfo={getEditionInfo(id)}
      />
    </Card>
    <CtaLink href="/">Hey, I learned something. Gimme more!</CtaLink>
  </div>
</BaseLayout>

<style>
  div {
    --cardColor: var(--color);
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }
</style>

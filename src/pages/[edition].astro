---
import type { VideoDocument, VideoFrontmatter } from '~/_types';
import Card from '~/components/Card.astro';
import BaseLayout from '~/layouts/Layout.astro';
import { getEditionInfo, stripHtmlHeadings } from '~/utils';
import CtaLink from '~/components/CtaLink.astro';

if (typeof Astro.params.edition !== 'string') return Astro.redirect('/');

const editions = await Astro.glob<VideoFrontmatter>('../editions/*.md');
const numToUrlMap: Map<string, VideoDocument> = new Map();
const baseToUrlMap: Map<string, VideoDocument> = new Map();

for (const edition of editions) {
  const info = getEditionInfo(edition.file);
  if (info) {
    numToUrlMap.set(`${info.num}`, edition);
    baseToUrlMap.set(`${info.base}`, edition);
  }
}

const edition = baseToUrlMap.get(Astro.params.edition) ?? numToUrlMap.get(Astro.params.edition);
if (!edition) return Astro.redirect('/');

Astro.response.headers.set(
	'cache-control',
	'public, max-age=31536000'
);
const { file, getHeadings, compiledContent, frontmatter } = edition;
const title = getHeadings().find(h => h.depth === 1)?.text ?? 'Whiteboard the Web';
const canonicalBase = getEditionInfo(file)?.base;
---

<BaseLayout title={title} canonicalBase={canonicalBase} preconnectToYoutube={Boolean(frontmatter.youtube)}>
  <div>
    <h1>{title}</h1>
    <Card 
      title={title}
      showTitleAsHeading={false}
      htmlBody={stripHtmlHeadings(compiledContent())}
      twitter={frontmatter.twitter}
      youtube={frontmatter.youtube}
    />
    <CtaLink href="/">Hey, I learned something. Gimme more!</CtaLink>
  </div>
</BaseLayout>

<style>
  div {
    --cardColor: var(--color);
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }
</style>

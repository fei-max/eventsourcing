---
import type { VideoFrontmatter } from "~types";
import CtaLink from "./CtaLink.astro";
import Link from "./icons/Link.astro";
import Twitter from "./icons/Twitter.astro";
import YouTube from "./icons/YouTube.astro";

type Props = VideoFrontmatter & {
  url?: string;
  title?: string;
  showTitleAsHeading?: boolean;
  htmlBody: string;
  colorIntersectionObserver?: boolean;
};

const { title, twitter, youtube, url, htmlBody } = Astro.props;
---

<article>
  <div class="video-container">
    <slot name="video" />
  </div>
  <div class="body-container">
    {title ? <h2>{title}</h2> : null}
    <Fragment set:html={htmlBody} />
  </div>
  <div class="ctas">
    {
      url ? (
        <CtaLink href={url}>
          <Fragment slot="label">Permalink</Fragment>
          <Link slot="icon" />
        </CtaLink>
      ) : null
    }
    {
      twitter ? (
        <CtaLink href={twitter} target="_blank" rel="noreferrer">
          <Fragment slot="label">Twitter</Fragment>
          <Twitter slot="icon" />
        </CtaLink>
      ) : null
    }
    {
      youtube ? (
        <CtaLink href={youtube} target="_blank" rel="noreferrer">
          <Fragment slot="label">YouTube</Fragment>
          <YouTube slot="icon" />
        </CtaLink>
      ) : null
    }
  </div>
</article>

<style>
  article {
    position: relative;
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: unset;
    grid-template-areas:
      "video"
      "body"
      "ctas";
    border-radius: 1.8rem;
    transition: border 0.2s;
    padding: 1.5rem;
    column-gap: 1.5rem;
    row-gap: 1rem;
    background-color: hsl(var(--color-hs), 99%);
  }

  .ctas {
    grid-area: ctas;
    display: flex;
    gap: 1rem;
    justify-content: flex-end;
    max-width: 10rem;
    margin-inline-start: auto;
  }

  @media (min-width: 600px) {
    article {
      grid-template-columns: 1fr 1fr;
      grid-template-rows: 1fr max-content;
      grid-template-areas:
        "video body"
        "video ctas";
    }

    .ctas {
      flex-direction: column;
    }
  }

  /* bottom shadow */
  article::before {
    content: "";
    position: absolute;
    inset: 1px;
    background-color: hsl(var(--color-hs), 90%);
    z-index: -1;
    border-radius: inherit;
    transform: translateY(4px);
    transition: transform 0.2s, background-color 0.2s;
  }

  /* video playing outline color */
  article::after {
    content: "";
    position: absolute;
    z-index: -1;
    inset: 0;
    border-radius: 2rem;
    background: linear-gradient(
      0,
      var(--color) 50%,
      hsl(var(--color-hs), 98%) 50%
    );
    background-size: 100% 200%;
    transition: background-position-y 0.2s, inset 0.2s;
  }

  article[data-video-playing]::after {
    inset: -0.2rem;
    background-position-y: 100%;
  }

  article[data-video-playing]::before {
    transform: translateY(0);
    background-color: var(--color);
  }
  .video-container {
    grid-area: video;
  }
  figure {
    position: relative;
    margin: 0;
    display: grid;
  }
  figcaption {
    font-style: italic;
  }
  .body-container {
    grid-area: body;
  }
</style>

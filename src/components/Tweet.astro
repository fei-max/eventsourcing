---
import { toRandomNotUglyColor } from '../utils';
import type { Tweet, TweetResponse, Media } from '../_types'
import XElement from 'astro-xelement';

const { Video } = XElement

export type Props = {
  tweet: Tweet;
  media: TweetResponse['includes']['media'];
}

const { tweet, media } = Astro.props as Props

function getFirstVideo(mediaKeys: string[]): Media & { type: 'video' } | null {
  for (const mediaKey of mediaKeys) {
    const match = media.find(m => m.media_key === mediaKey)
    if (match?.type === 'video') return match
  }
  return null
}

function handleVideoPlay (event: any) {
  const container = event.currentTarget?.closest('article')
  container.toggleAttribute('data-video-playing')
}

const videoInfo = getFirstVideo(tweet.attachments?.media_keys ?? [])
---
<article>
  {videoInfo ? (
    <figure class="video-container">
      <Video
      @play={handleVideoPlay}
      @pause={handleVideoPlay}
      crossorigin="anonymous" controls>
        {videoInfo.variants
          .sort((a, b) => (b.bit_rate ?? 0) - (a.bit_rate ?? 0))
          .map(({ content_type, url, bit_rate }) => (
            <source src={url} type={content_type} data-bit-rate={bit_rate} />
          ))}
      </Video>
    </figure>
  ) : null}
  <div class="tweet-container">
    {tweet.text.split('\n').map(paragraph => <p>{paragraph}</p>)}
  </div>
  <a class="cta" href={`https://twitter.com/bholmesdev/status/${tweet.id}`}>Share on twitter</a>
</article>

<style define:vars={{ color: toRandomNotUglyColor(), background: '#fff' }}>
  article {
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-template-rows: 1fr max-content;
    grid-template-areas: 'video tweet'
                         'video cta';
    border: 2px solid rgb(217, 221, 222);
    border-radius: 0.5rem;
    transition: border 0.2s;
  }
  article[data-video-playing] {
    border: 4px solid var(--color);
  }
  .video-container {
    grid-area: video;
  }
  figcaption {
    font-style: italic;
  }
  video {
    width: 100%;
    aspect-ratio: 9 / 16;
  }
  .tweet-container {
    grid-area: tweet;
  }
  .cta {
    grid-area: cta;
  }
</style>